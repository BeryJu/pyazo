# Global Variables
before_script:
  - "apt-get update"
  - "apt-get install -y libsasl2-dev libldap2-dev"
  - "python3 -m pip install -U virtualenv"
  - "virtualenv env"
  - "source env/bin/activate"
  - "pip3 install -U -r requirements-dev.txt"
stages:
  - test
  - build
  - docs
image: python:3.5

isort:
  script:
    - isort -c -sg env
  stage: test
migrations:
  script:
    - python manage.py migrate
  stage: test
prospector:
  script:
    - prospector
  stage: test
pylint:
  script:
    - pylint pyazo
  stage: test
coverage:
  script:
    - coverage run manage.py test
    - coverage report
  stage: test

package-docker:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    - echo "{\"auths\":{\"docker.$NEXUS_URL\":{\"auth\":\"$NEXUS_AUTH\"}}}" > /kaniko/.docker/config.json
  script:
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination docker.pkg.beryju.org/pyazo:stable --destination docker.pkg.beryju.org/pyazo:1.9.8
  stage: build
  only:
    - tags
    - /^debian/.*$/
package-helm:
  stage: build
  script:
    - curl https://raw.githubusercontent.com/helm/helm/master/scripts/get | bash
    - helm init --client-only
    - helm dependency build helm/pyazo
    - helm package helm/pyazo
    - ./manage.py nexus_upload --method put --url $NEXUS_URL --auth $NEXUS_AUTH --repo helm *.tgz
  only:
    - tags
    - /^debian/.*$/
package:
  before_script:
    - apt update
    - apt install -y --no-install-recommends build-essential debhelper devscripts equivs python3 python3-dev python3-pip libsasl2-dev libldap2-dev
    - mk-build-deps debian/control
    - apt install ./*build-deps*deb -f -y
    - "python3 -m pip install -U virtualenv pip"
    - "virtualenv env"
    - "source env/bin/activate"
    - "pip3 install -U -r requirements.txt -r requirements-dev.txt"
  image: ubuntu:18.04
  script:
    - debuild -us -uc
    - cp ../pyazo*.deb .
    - ./manage.py nexus_upload --method post --url $NEXUS_URL --auth $NEXUS_AUTH --repo apt pyazo*deb
  artifacts:
    paths:
    - pyazo*deb
    expire_in: 2 days
  stage: build
  only:
  - tags
  - /^debian/.*$/

docs:
  stage: docs
  only:
  - master
  - tags
  - /^debian/.*$/
  environment:
    name: docs
    url: "https://pyazo.beryju.org/docs/"
  script:
    - apt update
    - apt install -y rsync
    - "mkdir ~/.ssh"
    - "cp .gitlab/known_hosts ~/.ssh/"
    - "pip3 install -U -r requirements-docs.txt"
    - "eval $(ssh-agent -s)"
    - "echo \"${CI_SSH_PRIVATE}\" | ssh-add -"
    - mkdocs build
    - 'rsync -avh --delete site/* "beryjuorg@ory1-web-prod-1.ory1.beryju.org:pyazo.beryju.org/docs/"'

web:
  stage: docs
  only:
  - master
  - tags
  - /^debian/.*$/
  environment:
    name: docs
    url: "https://pyazo.beryju.org/"
  script:
    - apt update
    - apt install -y rsync
    - "mkdir ~/.ssh"
    - "cp .gitlab/known_hosts ~/.ssh/"
    - "eval $(ssh-agent -s)"
    - "echo \"${CI_SSH_PRIVATE}\" | ssh-add -"
    - 'rsync -avh --delete web/* "beryjuorg@ory1-web-prod-1.ory1.beryju.org:pyazo.beryju.org/"'
