{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Pyazo \u00b6 This documentation will help you to install and configure Pyazo.","title":"Home"},{"location":"#welcome-to-pyazo","text":"This documentation will help you to install and configure Pyazo.","title":"Welcome to Pyazo"},{"location":"api/","text":"POST /upload \u00b6 Gyazo-compatible upload endpoint. Takes 2 parameters: Parameters: \u00b6 imagedata Raw file data id Currently unused field but required to be compatible with gyazo's API. Can be used to send a client identifier. Returns \u00b6 Returns the full URL to the uploaded file (including https://...)","title":"API"},{"location":"api/#post-upload","text":"Gyazo-compatible upload endpoint. Takes 2 parameters:","title":"POST /upload"},{"location":"api/#parameters","text":"imagedata Raw file data id Currently unused field but required to be compatible with gyazo's API. Can be used to send a client identifier.","title":"Parameters:"},{"location":"api/#returns","text":"Returns the full URL to the uploaded file (including https://...)","title":"Returns"},{"location":"configuration/","text":"Configuration \u00b6 pyazo is configured through environment variables, which can be saved in a .env file in the same directory as your docker-compose.yml file. After changing any of these options, run docker-compose up -d to apply them. Secret Key \u00b6 This key is used to create cookies. Use a website like this to generate a key. PYAZO_SECRET_KEY=some-key-that-should-be-really-long Error Reporting \u00b6 It is recommended to enable Error-reporting, as it drastically improves bug reporting and fixing: PYAZO_ERROR_REPORTING=true Link Settings \u00b6 If you prefer shorter links, you can adjust the setting PYAZO_DEFAULT_RETURN_VIEW , which defaults to using the SHA256 of the uploaded file. The length of links is as following: Setting Length PYAZO_DEFAULT_RETURN_VIEW=sha512_short 16 PYAZO_DEFAULT_RETURN_VIEW=md5 32 PYAZO_DEFAULT_RETURN_VIEW=sha256 64 PYAZO_DEFAULT_RETURN_VIEW=sha512 128 Auto Claim \u00b6 Auto Claim automatically claims uploads to the first visitor that is logged in. Enable by add thing: PYAZO_AUTO_CLAIM_ENABLED=true LDAP Authentication \u00b6 pyazo supports Authentication against LDAP or Active Directory. To configure LDAP, add the following environment variables to your .env file: PYAZO_LDAP__ENABLED=true PYAZO_LDAP__SERVER__URI=ldap://dc1.example.com PYAZO_LDAP__SERVER__TLS=false PYAZO_LDAP__BIND__DN=bind-user PYAZO_LDAP__BIND__PASSWORD=bind-password PYAZO_LDAP__SEARCH_BASE= PYAZO_LDAP__FILTER=(sAMAccountName=%(user)s) PYAZO_LDAP__REQUIRE_GROUP=false The %(user)s placeholder in PYAZO_LDAP__FILTER is replaced by the username entered in the login form. The PYAZO_LDAP__REQUIRE_GROUP setting is optional and can be used to specify the DN of a group the user has to be member of. OIDC Authentication \u00b6 pyazo supports Authentication against any OpenID-Connect compatible provider. To configure OIDC, add the following environment variables to your .env file: PYAZO_OIDC__CLIENT_ID=foo PYAZO_OIDC__CLIENT_SECRET=bar PYAZO_OIDC__AUTHORIZATION_URL=https://<your provider>/application/oidc/authorize PYAZO_OIDC__TOKEN_URL=https://<your provider>/application/oidc/token PYAZO_OIDC__USER_URL=https://<your provider>/application/oidc/userinfo The Callback URL of pyazo is <pyazo URL>/oidc/callback/ .","title":"Configuration"},{"location":"configuration/#configuration","text":"pyazo is configured through environment variables, which can be saved in a .env file in the same directory as your docker-compose.yml file. After changing any of these options, run docker-compose up -d to apply them.","title":"Configuration"},{"location":"configuration/#secret-key","text":"This key is used to create cookies. Use a website like this to generate a key. PYAZO_SECRET_KEY=some-key-that-should-be-really-long","title":"Secret Key"},{"location":"configuration/#error-reporting","text":"It is recommended to enable Error-reporting, as it drastically improves bug reporting and fixing: PYAZO_ERROR_REPORTING=true","title":"Error Reporting"},{"location":"configuration/#link-settings","text":"If you prefer shorter links, you can adjust the setting PYAZO_DEFAULT_RETURN_VIEW , which defaults to using the SHA256 of the uploaded file. The length of links is as following: Setting Length PYAZO_DEFAULT_RETURN_VIEW=sha512_short 16 PYAZO_DEFAULT_RETURN_VIEW=md5 32 PYAZO_DEFAULT_RETURN_VIEW=sha256 64 PYAZO_DEFAULT_RETURN_VIEW=sha512 128","title":"Link Settings"},{"location":"configuration/#auto-claim","text":"Auto Claim automatically claims uploads to the first visitor that is logged in. Enable by add thing: PYAZO_AUTO_CLAIM_ENABLED=true","title":"Auto Claim"},{"location":"configuration/#ldap-authentication","text":"pyazo supports Authentication against LDAP or Active Directory. To configure LDAP, add the following environment variables to your .env file: PYAZO_LDAP__ENABLED=true PYAZO_LDAP__SERVER__URI=ldap://dc1.example.com PYAZO_LDAP__SERVER__TLS=false PYAZO_LDAP__BIND__DN=bind-user PYAZO_LDAP__BIND__PASSWORD=bind-password PYAZO_LDAP__SEARCH_BASE= PYAZO_LDAP__FILTER=(sAMAccountName=%(user)s) PYAZO_LDAP__REQUIRE_GROUP=false The %(user)s placeholder in PYAZO_LDAP__FILTER is replaced by the username entered in the login form. The PYAZO_LDAP__REQUIRE_GROUP setting is optional and can be used to specify the DN of a group the user has to be member of.","title":"LDAP Authentication"},{"location":"configuration/#oidc-authentication","text":"pyazo supports Authentication against any OpenID-Connect compatible provider. To configure OIDC, add the following environment variables to your .env file: PYAZO_OIDC__CLIENT_ID=foo PYAZO_OIDC__CLIENT_SECRET=bar PYAZO_OIDC__AUTHORIZATION_URL=https://<your provider>/application/oidc/authorize PYAZO_OIDC__TOKEN_URL=https://<your provider>/application/oidc/token PYAZO_OIDC__USER_URL=https://<your provider>/application/oidc/userinfo The Callback URL of pyazo is <pyazo URL>/oidc/callback/ .","title":"OIDC Authentication"},{"location":"install/","text":"Installation \u00b6 The recommended way to deploy pyazo on docker is with docker-compose. Simply download the docker-compose.yml file from here , place it wherever you want to, and run the following commands: docker-compose pull docker-compose up -d docker-compose exec server ./manage.py migrate docker-compose exec server ./manage.py createsuperuser This will start pyazo, listening on port 80 and 443. To configure pyazo, check out Configuration .","title":"Installation"},{"location":"install/#installation","text":"The recommended way to deploy pyazo on docker is with docker-compose. Simply download the docker-compose.yml file from here , place it wherever you want to, and run the following commands: docker-compose pull docker-compose up -d docker-compose exec server ./manage.py migrate docker-compose exec server ./manage.py createsuperuser This will start pyazo, listening on port 80 and 443. To configure pyazo, check out Configuration .","title":"Installation"}]}