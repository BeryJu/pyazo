{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Pyazo \u00b6 This documentation will help you to install and configure Pyazo.","title":"Home"},{"location":"#welcome-to-pyazo","text":"This documentation will help you to install and configure Pyazo.","title":"Welcome to Pyazo"},{"location":"api/","text":"POST /upload \u00b6 Gyazo-compatible upload endpoint. Takes 2 parameters: Parameters: \u00b6 imagedata Raw file data id Currently unused field but required to be compatible with gyazo's API. Can be used to send a client identifier. Returns \u00b6 Returns the full URL to the uploaded file (including https://...)","title":"API"},{"location":"api/#post-upload","text":"Gyazo-compatible upload endpoint. Takes 2 parameters:","title":"POST /upload"},{"location":"api/#parameters","text":"imagedata Raw file data id Currently unused field but required to be compatible with gyazo's API. Can be used to send a client identifier.","title":"Parameters:"},{"location":"api/#returns","text":"Returns the full URL to the uploaded file (including https://...)","title":"Returns"},{"location":"configuration/","text":"Configuration \u00b6 pyazo is configured through environment variables, which can be saved in a .env file in the same directory as your docker-compose.yml file. After changing any of these options, run docker-compose up -d to apply them. Error Reporting \u00b6 It is recommended to enable Error-reporting, as it drastically improves bug reporting and fixing: PYAZO_ERROR_REPORTING=true Link Settings \u00b6 If you prefer shorter links, you can adjust the setting PYAZO_DEFAULT_RETURN_VIEW , which defaults to using the SHA256 of the uploaded file. The length of links is as following: Setting Length PYAZO_DEFAULT_RETURN_VIEW=sha512_short 16 PYAZO_DEFAULT_RETURN_VIEW=md5 32 PYAZO_DEFAULT_RETURN_VIEW=sha256 64 PYAZO_DEFAULT_RETURN_VIEW=sha512 128 Auto Claim \u00b6 Auto Claim automatically claims uploads to the first visitor that is logged in. Enable by add thing: PYAZO_AUTO_CLAIM_ENABLED=true LDAP Authentication \u00b6 pyazo supports Authentication against LDAP or Active Directory. To configure LDAP, add the following environment variables to your .env file: PYAZO_LDAP__ENABLED=true PYAZO_LDAP__SERVER__URI=ldap://dc1.example.com PYAZO_LDAP__SERVER__TLS=false PYAZO_LDAP__BIND__DN=bind-user PYAZO_LDAP__BIND__PASSWORD=bind-password PYAZO_LDAP__SEARCH_BASE= # Defaults to (sAMAccountName=%(user)s) # PYAZO_LDAP__FILTER= # PYAZO_LDAP__REQUIRE_GROUP= The %(user)s placeholder in PYAZO_LDAP__FILTER is replaced by the username entered in the login form. The PYAZO_LDAP__REQUIRE_GROUP setting is optional and can be used to specify the DN of a group the user has to be member of. OIDC Authentication \u00b6 pyazo supports Authentication against any OpenID-Connect compatible provider. To configure OIDC, add the following environment variables to your .env file: PYAZO_OIDC__CLIENT_ID=foo PYAZO_OIDC__CLIENT_SECRET=bar PYAZO_OIDC__AUTHORIZATION_URL=https://<your provider>/application/oidc/authorize PYAZO_OIDC__TOKEN_URL=https://<your provider>/application/oidc/token PYAZO_OIDC__USER_URL=https://<your provider>/application/oidc/userinfo The Callback URL of pyazo is <pyazo URL>/oidc/callback/ .","title":"Configuration"},{"location":"configuration/#configuration","text":"pyazo is configured through environment variables, which can be saved in a .env file in the same directory as your docker-compose.yml file. After changing any of these options, run docker-compose up -d to apply them.","title":"Configuration"},{"location":"configuration/#error-reporting","text":"It is recommended to enable Error-reporting, as it drastically improves bug reporting and fixing: PYAZO_ERROR_REPORTING=true","title":"Error Reporting"},{"location":"configuration/#link-settings","text":"If you prefer shorter links, you can adjust the setting PYAZO_DEFAULT_RETURN_VIEW , which defaults to using the SHA256 of the uploaded file. The length of links is as following: Setting Length PYAZO_DEFAULT_RETURN_VIEW=sha512_short 16 PYAZO_DEFAULT_RETURN_VIEW=md5 32 PYAZO_DEFAULT_RETURN_VIEW=sha256 64 PYAZO_DEFAULT_RETURN_VIEW=sha512 128","title":"Link Settings"},{"location":"configuration/#auto-claim","text":"Auto Claim automatically claims uploads to the first visitor that is logged in. Enable by add thing: PYAZO_AUTO_CLAIM_ENABLED=true","title":"Auto Claim"},{"location":"configuration/#ldap-authentication","text":"pyazo supports Authentication against LDAP or Active Directory. To configure LDAP, add the following environment variables to your .env file: PYAZO_LDAP__ENABLED=true PYAZO_LDAP__SERVER__URI=ldap://dc1.example.com PYAZO_LDAP__SERVER__TLS=false PYAZO_LDAP__BIND__DN=bind-user PYAZO_LDAP__BIND__PASSWORD=bind-password PYAZO_LDAP__SEARCH_BASE= # Defaults to (sAMAccountName=%(user)s) # PYAZO_LDAP__FILTER= # PYAZO_LDAP__REQUIRE_GROUP= The %(user)s placeholder in PYAZO_LDAP__FILTER is replaced by the username entered in the login form. The PYAZO_LDAP__REQUIRE_GROUP setting is optional and can be used to specify the DN of a group the user has to be member of.","title":"LDAP Authentication"},{"location":"configuration/#oidc-authentication","text":"pyazo supports Authentication against any OpenID-Connect compatible provider. To configure OIDC, add the following environment variables to your .env file: PYAZO_OIDC__CLIENT_ID=foo PYAZO_OIDC__CLIENT_SECRET=bar PYAZO_OIDC__AUTHORIZATION_URL=https://<your provider>/application/oidc/authorize PYAZO_OIDC__TOKEN_URL=https://<your provider>/application/oidc/token PYAZO_OIDC__USER_URL=https://<your provider>/application/oidc/userinfo The Callback URL of pyazo is <pyazo URL>/oidc/callback/ .","title":"OIDC Authentication"},{"location":"install/","text":"Installation \u00b6 The recommended way to deploy pyazo on docker is with docker-compose. Simply download the docker-compose.yml file from here and place it wherever you want to. To make your pyazo install secure, create a file called .env in the same directory as docker-compose.yml and add the following value: PYAZO_POSTGRESQL__PASSWORD=<some random password> The secret key is used to create and sign cookies. Use a website like this to generate a key. PYAZO_SECRET_KEY=some-key-that-should-be-really-long Afterwards, run the following commands: Note Optionally, if you want to migrate an old install, check this out. docker-compose pull docker-compose up -d docker-compose exec server ./manage.py migrate docker-compose exec server ./manage.py createsuperuser This will start pyazo, listening on port 80 and 443. To configure pyazo, check out Configuration .","title":"Installation"},{"location":"install/#installation","text":"The recommended way to deploy pyazo on docker is with docker-compose. Simply download the docker-compose.yml file from here and place it wherever you want to. To make your pyazo install secure, create a file called .env in the same directory as docker-compose.yml and add the following value: PYAZO_POSTGRESQL__PASSWORD=<some random password> The secret key is used to create and sign cookies. Use a website like this to generate a key. PYAZO_SECRET_KEY=some-key-that-should-be-really-long Afterwards, run the following commands: Note Optionally, if you want to migrate an old install, check this out. docker-compose pull docker-compose up -d docker-compose exec server ./manage.py migrate docker-compose exec server ./manage.py createsuperuser This will start pyazo, listening on port 80 and 443. To configure pyazo, check out Configuration .","title":"Installation"},{"location":"migration/","text":"Migrating from pyazo < 2.0 \u00b6 This migration guide uses pgLoader to convert the MySQL Database from the old instance into the PostgreSQL Database that is used now. This guide also assumes that you want to keep using the same underlying server. Even if you want to move pyazo to a different machine, it is recommended to use this guide, as it makes it much easier to migrate on the same host. Pre-requisites \u00b6 Docker and docker-compose is installed on the pyazo Server Install pgLoader ( apt install pgloader for example.) Prepare the new pyazo install \u00b6 The old config file is located here: /etc/pyazo/config.yml Old setting name New setting name error_report_enabled: PYAZO_ERROR_REPORTING external_url Not needed anymore. default_return_view PYAZO_DEFAULT_RETURN_VIEW external_auth_only Not needed anymore. auto_claim_enabled PYAZO_AUTO_CLAIM_ENABLED Additionally , the content of /etc/pyazo/secret_key should be added as PYAZO_SECRET_KEY . Note For LDAP Configuration, see Configuration Saving an export of the old pyazo install \u00b6 Incase the migration goes wrong, it is recommended to create a database backup. mysqldump -u pyazo -p pyazo > pyazo-backup.sql The password is saved in /etc/pyazo/config.d/database.yml . Copying the media \u00b6 The media needs to be copied from /usr/share/pyazo/media/ to <new pyazo install>/media/ . Simply run the following command in your new pyazo's installation directory: rsync -r --progress /usr/share/pyazo/media . chown -R 1000:1000 media Migrate from MySQL to PostgreSQL \u00b6 # Download latest images, create containers, but *only* start PostgreSQL docker-compose pull docker-compose up --no-start docker-compose start postgresql # Password from /etc/pyazo/config.d/database.yml export MYSQL_PWD='' # Password you've generated during install export PGPASSWORD='' # This contains the IP Address of your PostgreSQL Container PG_ID=$(docker ps | grep postgres | awk '{print $1}') PG_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $PG_ID) # Run the actual migration pgloader mysql://pyazo:@localhost/pyazo pgsql://pyazo@$PG_IP/pyazo Update the database to the newest version \u00b6 docker-compose run server ./manage.py migrate Start pyazo \u00b6 docker-compose pull docker-compose up -d","title":"Migration"},{"location":"migration/#migrating-from-pyazo-20","text":"This migration guide uses pgLoader to convert the MySQL Database from the old instance into the PostgreSQL Database that is used now. This guide also assumes that you want to keep using the same underlying server. Even if you want to move pyazo to a different machine, it is recommended to use this guide, as it makes it much easier to migrate on the same host.","title":"Migrating from pyazo &lt; 2.0"},{"location":"migration/#pre-requisites","text":"Docker and docker-compose is installed on the pyazo Server Install pgLoader ( apt install pgloader for example.)","title":"Pre-requisites"},{"location":"migration/#prepare-the-new-pyazo-install","text":"The old config file is located here: /etc/pyazo/config.yml Old setting name New setting name error_report_enabled: PYAZO_ERROR_REPORTING external_url Not needed anymore. default_return_view PYAZO_DEFAULT_RETURN_VIEW external_auth_only Not needed anymore. auto_claim_enabled PYAZO_AUTO_CLAIM_ENABLED Additionally , the content of /etc/pyazo/secret_key should be added as PYAZO_SECRET_KEY . Note For LDAP Configuration, see Configuration","title":"Prepare the new pyazo install"},{"location":"migration/#saving-an-export-of-the-old-pyazo-install","text":"Incase the migration goes wrong, it is recommended to create a database backup. mysqldump -u pyazo -p pyazo > pyazo-backup.sql The password is saved in /etc/pyazo/config.d/database.yml .","title":"Saving an export of the old pyazo install"},{"location":"migration/#copying-the-media","text":"The media needs to be copied from /usr/share/pyazo/media/ to <new pyazo install>/media/ . Simply run the following command in your new pyazo's installation directory: rsync -r --progress /usr/share/pyazo/media . chown -R 1000:1000 media","title":"Copying the media"},{"location":"migration/#migrate-from-mysql-to-postgresql","text":"# Download latest images, create containers, but *only* start PostgreSQL docker-compose pull docker-compose up --no-start docker-compose start postgresql # Password from /etc/pyazo/config.d/database.yml export MYSQL_PWD='' # Password you've generated during install export PGPASSWORD='' # This contains the IP Address of your PostgreSQL Container PG_ID=$(docker ps | grep postgres | awk '{print $1}') PG_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $PG_ID) # Run the actual migration pgloader mysql://pyazo:@localhost/pyazo pgsql://pyazo@$PG_IP/pyazo","title":"Migrate from MySQL to PostgreSQL"},{"location":"migration/#update-the-database-to-the-newest-version","text":"docker-compose run server ./manage.py migrate","title":"Update the database to the newest version"},{"location":"migration/#start-pyazo","text":"docker-compose pull docker-compose up -d","title":"Start pyazo"}]}